<?php
/* @noinspection ALL */
// @formatter:off
// phpcs:ignoreFile

namespace PHPSTORM_META {

   /**
    * PhpStorm Meta file, to provide autocomplete information for PhpStorm
    *
    * @author Barry vd. Heuvel <barryvdh@gmail.com>
    * @see https://github.com/barryvdh/laravel-ide-helper
    */
    override(new \Illuminate\Contracts\Container\Container, map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Container\Container::makeWith(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::get(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::make(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::makeWith(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::get(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::make(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::makeWith(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\app(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\resolve(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Psr\Container\ContainerInterface::get(0), map([
        '' => '@',
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Database\ConcurrencyErrorDetector' => \Illuminate\Database\ConcurrencyErrorDetector::class,
            'Illuminate\Contracts\Database\LostConnectionDetector' => \Illuminate\Database\LostConnectionDetector::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Inertia\Ssr\Gateway' => \Inertia\Ssr\HttpGateway::class,
            'Laravel\Fortify\Contracts\ConfirmPasswordViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RedirectsIfTwoFactorAuthenticatable' => \Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorChallengeViewResponse' => \Laravel\Fortify\Http\Responses\SimpleViewResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\SQLiteConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\SQLiteBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'inertia.testing.view-finder' => \Illuminate\View\FileViewFinder::class,
            'inertia.view-finder' => \Illuminate\View\FileViewFinder::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));

    override(\auth()->user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Contracts\Auth\Guard::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Support\Facades\Auth::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\request()->user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Http\Request::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Support\Facades\Request::user(), map([
        '' => \App\Models\User::class,
    ]));

    override(\config(), map([
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.bcrypt.limit' => 'NULL',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Benchmark' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.session.driver' => 'string',
            'cache.stores.session.key' => 'string',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.prefix' => 'string',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.default.max_retries' => 'integer',
            'database.redis.default.backoff_algorithm' => 'string',
            'database.redis.default.backoff_base' => 'integer',
            'database.redis.default.backoff_cap' => 'integer',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'database.redis.cache.max_retries' => 'integer',
            'database.redis.cache.backoff_algorithm' => 'string',
            'database.redis.cache.backoff_base' => 'integer',
            'database.redis.cache.backoff_cap' => 'integer',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.local.report' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.public.report' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.disks.s3.report' => 'boolean',
            'filesystems.links.C:\xampp\htdocs\MediManage\public\storage' => 'string',
            'fortify.guard' => 'string',
            'fortify.middleware' => 'array',
            'fortify.auth_middleware' => 'string',
            'fortify.passwords' => 'string',
            'fortify.username' => 'string',
            'fortify.email' => 'string',
            'fortify.views' => 'boolean',
            'fortify.home' => 'string',
            'fortify.prefix' => 'string',
            'fortify.domain' => 'NULL',
            'fortify.lowercase_usernames' => 'boolean',
            'fortify.limiters.login' => 'string',
            'fortify.limiters.two-factor' => 'string',
            'fortify.paths.login' => 'NULL',
            'fortify.paths.logout' => 'NULL',
            'fortify.paths.password.request' => 'NULL',
            'fortify.paths.password.reset' => 'NULL',
            'fortify.paths.password.email' => 'NULL',
            'fortify.paths.password.update' => 'NULL',
            'fortify.paths.password.confirm' => 'NULL',
            'fortify.paths.password.confirmation' => 'NULL',
            'fortify.paths.register' => 'NULL',
            'fortify.paths.verification.notice' => 'NULL',
            'fortify.paths.verification.verify' => 'NULL',
            'fortify.paths.verification.send' => 'NULL',
            'fortify.paths.user-profile-information.update' => 'NULL',
            'fortify.paths.user-password.update' => 'NULL',
            'fortify.paths.two-factor.login' => 'NULL',
            'fortify.paths.two-factor.enable' => 'NULL',
            'fortify.paths.two-factor.confirm' => 'NULL',
            'fortify.paths.two-factor.disable' => 'NULL',
            'fortify.paths.two-factor.qr-code' => 'NULL',
            'fortify.paths.two-factor.secret-key' => 'NULL',
            'fortify.paths.two-factor.recovery-codes' => 'NULL',
            'fortify.redirects.login' => 'NULL',
            'fortify.redirects.logout' => 'NULL',
            'fortify.redirects.password-confirmation' => 'NULL',
            'fortify.redirects.register' => 'NULL',
            'fortify.redirects.email-verification' => 'NULL',
            'fortify.redirects.password-reset' => 'NULL',
            'fortify.features' => 'array',
            'inertia.ssr.enabled' => 'boolean',
            'inertia.ssr.url' => 'string',
            'inertia.ensure_pages_exist' => 'boolean',
            'inertia.page_paths' => 'array',
            'inertia.page_extensions' => 'array',
            'inertia.testing.ensure_pages_exist' => 'boolean',
            'inertia.testing.page_paths' => 'array',
            'inertia.testing.page_extensions' => 'array',
            'inertia.history.encrypt' => 'boolean',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'array',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.with.stream' => 'string',
            'logging.channels.stderr.processors' => 'array',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'services.postmark.token' => 'NULL',
            'services.resend.key' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'integer',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_model_relation_exists_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.macro_default_return_types.Illuminate\Http\Client\Factory' => 'string',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));
    override(\Illuminate\Config\Repository::get(), map([
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.bcrypt.limit' => 'NULL',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Benchmark' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.session.driver' => 'string',
            'cache.stores.session.key' => 'string',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.prefix' => 'string',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.default.max_retries' => 'integer',
            'database.redis.default.backoff_algorithm' => 'string',
            'database.redis.default.backoff_base' => 'integer',
            'database.redis.default.backoff_cap' => 'integer',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'database.redis.cache.max_retries' => 'integer',
            'database.redis.cache.backoff_algorithm' => 'string',
            'database.redis.cache.backoff_base' => 'integer',
            'database.redis.cache.backoff_cap' => 'integer',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.local.report' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.public.report' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.disks.s3.report' => 'boolean',
            'filesystems.links.C:\xampp\htdocs\MediManage\public\storage' => 'string',
            'fortify.guard' => 'string',
            'fortify.middleware' => 'array',
            'fortify.auth_middleware' => 'string',
            'fortify.passwords' => 'string',
            'fortify.username' => 'string',
            'fortify.email' => 'string',
            'fortify.views' => 'boolean',
            'fortify.home' => 'string',
            'fortify.prefix' => 'string',
            'fortify.domain' => 'NULL',
            'fortify.lowercase_usernames' => 'boolean',
            'fortify.limiters.login' => 'string',
            'fortify.limiters.two-factor' => 'string',
            'fortify.paths.login' => 'NULL',
            'fortify.paths.logout' => 'NULL',
            'fortify.paths.password.request' => 'NULL',
            'fortify.paths.password.reset' => 'NULL',
            'fortify.paths.password.email' => 'NULL',
            'fortify.paths.password.update' => 'NULL',
            'fortify.paths.password.confirm' => 'NULL',
            'fortify.paths.password.confirmation' => 'NULL',
            'fortify.paths.register' => 'NULL',
            'fortify.paths.verification.notice' => 'NULL',
            'fortify.paths.verification.verify' => 'NULL',
            'fortify.paths.verification.send' => 'NULL',
            'fortify.paths.user-profile-information.update' => 'NULL',
            'fortify.paths.user-password.update' => 'NULL',
            'fortify.paths.two-factor.login' => 'NULL',
            'fortify.paths.two-factor.enable' => 'NULL',
            'fortify.paths.two-factor.confirm' => 'NULL',
            'fortify.paths.two-factor.disable' => 'NULL',
            'fortify.paths.two-factor.qr-code' => 'NULL',
            'fortify.paths.two-factor.secret-key' => 'NULL',
            'fortify.paths.two-factor.recovery-codes' => 'NULL',
            'fortify.redirects.login' => 'NULL',
            'fortify.redirects.logout' => 'NULL',
            'fortify.redirects.password-confirmation' => 'NULL',
            'fortify.redirects.register' => 'NULL',
            'fortify.redirects.email-verification' => 'NULL',
            'fortify.redirects.password-reset' => 'NULL',
            'fortify.features' => 'array',
            'inertia.ssr.enabled' => 'boolean',
            'inertia.ssr.url' => 'string',
            'inertia.ensure_pages_exist' => 'boolean',
            'inertia.page_paths' => 'array',
            'inertia.page_extensions' => 'array',
            'inertia.testing.ensure_pages_exist' => 'boolean',
            'inertia.testing.page_paths' => 'array',
            'inertia.testing.page_extensions' => 'array',
            'inertia.history.encrypt' => 'boolean',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'array',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.with.stream' => 'string',
            'logging.channels.stderr.processors' => 'array',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'services.postmark.token' => 'NULL',
            'services.resend.key' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'integer',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_model_relation_exists_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.macro_default_return_types.Illuminate\Http\Client\Factory' => 'string',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));
    override(\Illuminate\Support\Facades\Config::get(), map([
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.bcrypt.limit' => 'NULL',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Benchmark' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.session.driver' => 'string',
            'cache.stores.session.key' => 'string',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.prefix' => 'string',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.default.max_retries' => 'integer',
            'database.redis.default.backoff_algorithm' => 'string',
            'database.redis.default.backoff_base' => 'integer',
            'database.redis.default.backoff_cap' => 'integer',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'database.redis.cache.max_retries' => 'integer',
            'database.redis.cache.backoff_algorithm' => 'string',
            'database.redis.cache.backoff_base' => 'integer',
            'database.redis.cache.backoff_cap' => 'integer',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.local.report' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.public.report' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.disks.s3.report' => 'boolean',
            'filesystems.links.C:\xampp\htdocs\MediManage\public\storage' => 'string',
            'fortify.guard' => 'string',
            'fortify.middleware' => 'array',
            'fortify.auth_middleware' => 'string',
            'fortify.passwords' => 'string',
            'fortify.username' => 'string',
            'fortify.email' => 'string',
            'fortify.views' => 'boolean',
            'fortify.home' => 'string',
            'fortify.prefix' => 'string',
            'fortify.domain' => 'NULL',
            'fortify.lowercase_usernames' => 'boolean',
            'fortify.limiters.login' => 'string',
            'fortify.limiters.two-factor' => 'string',
            'fortify.paths.login' => 'NULL',
            'fortify.paths.logout' => 'NULL',
            'fortify.paths.password.request' => 'NULL',
            'fortify.paths.password.reset' => 'NULL',
            'fortify.paths.password.email' => 'NULL',
            'fortify.paths.password.update' => 'NULL',
            'fortify.paths.password.confirm' => 'NULL',
            'fortify.paths.password.confirmation' => 'NULL',
            'fortify.paths.register' => 'NULL',
            'fortify.paths.verification.notice' => 'NULL',
            'fortify.paths.verification.verify' => 'NULL',
            'fortify.paths.verification.send' => 'NULL',
            'fortify.paths.user-profile-information.update' => 'NULL',
            'fortify.paths.user-password.update' => 'NULL',
            'fortify.paths.two-factor.login' => 'NULL',
            'fortify.paths.two-factor.enable' => 'NULL',
            'fortify.paths.two-factor.confirm' => 'NULL',
            'fortify.paths.two-factor.disable' => 'NULL',
            'fortify.paths.two-factor.qr-code' => 'NULL',
            'fortify.paths.two-factor.secret-key' => 'NULL',
            'fortify.paths.two-factor.recovery-codes' => 'NULL',
            'fortify.redirects.login' => 'NULL',
            'fortify.redirects.logout' => 'NULL',
            'fortify.redirects.password-confirmation' => 'NULL',
            'fortify.redirects.register' => 'NULL',
            'fortify.redirects.email-verification' => 'NULL',
            'fortify.redirects.password-reset' => 'NULL',
            'fortify.features' => 'array',
            'inertia.ssr.enabled' => 'boolean',
            'inertia.ssr.url' => 'string',
            'inertia.ensure_pages_exist' => 'boolean',
            'inertia.page_paths' => 'array',
            'inertia.page_extensions' => 'array',
            'inertia.testing.ensure_pages_exist' => 'boolean',
            'inertia.testing.page_paths' => 'array',
            'inertia.testing.page_extensions' => 'array',
            'inertia.history.encrypt' => 'boolean',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'array',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.with.stream' => 'string',
            'logging.channels.stderr.processors' => 'array',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'services.postmark.token' => 'NULL',
            'services.resend.key' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'integer',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_model_relation_exists_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.macro_default_return_types.Illuminate\Http\Client\Factory' => 'string',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));


    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::mock(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::partialMock(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::instance(0), type(1));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::spy(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Support\Arr::add(0), type(0));
    override(\Illuminate\Support\Arr::except(0), type(0));
    override(\Illuminate\Support\Arr::first(0), elementType(0));
    override(\Illuminate\Support\Arr::last(0), elementType(0));
    override(\Illuminate\Support\Arr::get(0), elementType(0));
    override(\Illuminate\Support\Arr::only(0), type(0));
    override(\Illuminate\Support\Arr::prepend(0), type(0));
    override(\Illuminate\Support\Arr::pull(0), elementType(0));
    override(\Illuminate\Support\Arr::set(0), type(0));
    override(\Illuminate\Support\Arr::shuffle(0), type(0));
    override(\Illuminate\Support\Arr::sort(0), type(0));
    override(\Illuminate\Support\Arr::sortRecursive(0), type(0));
    override(\Illuminate\Support\Arr::where(0), type(0));
    override(\array_add(0), type(0));
    override(\array_except(0), type(0));
    override(\array_first(0), elementType(0));
    override(\array_last(0), elementType(0));
    override(\array_get(0), elementType(0));
    override(\array_only(0), type(0));
    override(\array_prepend(0), type(0));
    override(\array_pull(0), elementType(0));
    override(\array_set(0), type(0));
    override(\array_sort(0), type(0));
    override(\array_sort_recursive(0), type(0));
    override(\array_where(0), type(0));
    override(\head(0), elementType(0));
    override(\last(0), elementType(0));
    override(\with(0), type(0));
    override(\tap(0), type(0));
    override(\optional(0), type(0));

            registerArgumentsSet('auth', );
        registerArgumentsSet('configs', 
'broadcasting.default','broadcasting.connections.reverb.driver','broadcasting.connections.reverb.key','broadcasting.connections.reverb.secret','broadcasting.connections.reverb.app_id',
'broadcasting.connections.reverb.options.host','broadcasting.connections.reverb.options.port','broadcasting.connections.reverb.options.scheme','broadcasting.connections.reverb.options.useTLS','broadcasting.connections.reverb.client_options',
'broadcasting.connections.pusher.driver','broadcasting.connections.pusher.key','broadcasting.connections.pusher.secret','broadcasting.connections.pusher.app_id','broadcasting.connections.pusher.options.cluster',
'broadcasting.connections.pusher.options.host','broadcasting.connections.pusher.options.port','broadcasting.connections.pusher.options.scheme','broadcasting.connections.pusher.options.encrypted','broadcasting.connections.pusher.options.useTLS',
'broadcasting.connections.pusher.client_options','broadcasting.connections.ably.driver','broadcasting.connections.ably.key','broadcasting.connections.log.driver','broadcasting.connections.null.driver',
'concurrency.default','cors.paths','cors.allowed_methods','cors.allowed_origins','cors.allowed_origins_patterns',
'cors.allowed_headers','cors.exposed_headers','cors.max_age','cors.supports_credentials','hashing.driver',
'hashing.bcrypt.rounds','hashing.bcrypt.verify','hashing.bcrypt.limit','hashing.argon.memory','hashing.argon.threads',
'hashing.argon.time','hashing.argon.verify','hashing.rehash_on_login','view.paths','view.compiled',
'app.name','app.env','app.debug','app.url','app.frontend_url',
'app.asset_url','app.timezone','app.locale','app.fallback_locale','app.faker_locale',
'app.cipher','app.key','app.previous_keys','app.maintenance.driver','app.maintenance.store',
'app.providers','app.aliases.App','app.aliases.Arr','app.aliases.Artisan','app.aliases.Auth',
'app.aliases.Benchmark','app.aliases.Blade','app.aliases.Broadcast','app.aliases.Bus','app.aliases.Cache',
'app.aliases.Concurrency','app.aliases.Config','app.aliases.Context','app.aliases.Cookie','app.aliases.Crypt',
'app.aliases.Date','app.aliases.DB','app.aliases.Eloquent','app.aliases.Event','app.aliases.File',
'app.aliases.Gate','app.aliases.Hash','app.aliases.Http','app.aliases.Js','app.aliases.Lang',
'app.aliases.Log','app.aliases.Mail','app.aliases.Notification','app.aliases.Number','app.aliases.Password',
'app.aliases.Process','app.aliases.Queue','app.aliases.RateLimiter','app.aliases.Redirect','app.aliases.Request',
'app.aliases.Response','app.aliases.Route','app.aliases.Schedule','app.aliases.Schema','app.aliases.Session',
'app.aliases.Storage','app.aliases.Str','app.aliases.Uri','app.aliases.URL','app.aliases.Validator',
'app.aliases.View','app.aliases.Vite','auth.defaults.guard','auth.defaults.passwords','auth.guards.web.driver',
'auth.guards.web.provider','auth.providers.users.driver','auth.providers.users.model','auth.passwords.users.provider','auth.passwords.users.table',
'auth.passwords.users.expire','auth.passwords.users.throttle','auth.password_timeout','cache.default','cache.stores.array.driver',
'cache.stores.array.serialize','cache.stores.session.driver','cache.stores.session.key','cache.stores.database.driver','cache.stores.database.connection',
'cache.stores.database.table','cache.stores.database.lock_connection','cache.stores.database.lock_table','cache.stores.file.driver','cache.stores.file.path',
'cache.stores.file.lock_path','cache.stores.memcached.driver','cache.stores.memcached.persistent_id','cache.stores.memcached.sasl','cache.stores.memcached.options',
'cache.stores.memcached.servers.0.host','cache.stores.memcached.servers.0.port','cache.stores.memcached.servers.0.weight','cache.stores.redis.driver','cache.stores.redis.connection',
'cache.stores.redis.lock_connection','cache.stores.dynamodb.driver','cache.stores.dynamodb.key','cache.stores.dynamodb.secret','cache.stores.dynamodb.region',
'cache.stores.dynamodb.table','cache.stores.dynamodb.endpoint','cache.stores.octane.driver','cache.prefix','database.default',
'database.connections.sqlite.driver','database.connections.sqlite.url','database.connections.sqlite.database','database.connections.sqlite.prefix','database.connections.sqlite.foreign_key_constraints',
'database.connections.sqlite.busy_timeout','database.connections.sqlite.journal_mode','database.connections.sqlite.synchronous','database.connections.mysql.driver','database.connections.mysql.url',
'database.connections.mysql.host','database.connections.mysql.port','database.connections.mysql.database','database.connections.mysql.username','database.connections.mysql.password',
'database.connections.mysql.unix_socket','database.connections.mysql.charset','database.connections.mysql.collation','database.connections.mysql.prefix','database.connections.mysql.prefix_indexes',
'database.connections.mysql.strict','database.connections.mysql.engine','database.connections.mysql.options','database.connections.mariadb.driver','database.connections.mariadb.url',
'database.connections.mariadb.host','database.connections.mariadb.port','database.connections.mariadb.database','database.connections.mariadb.username','database.connections.mariadb.password',
'database.connections.mariadb.unix_socket','database.connections.mariadb.charset','database.connections.mariadb.collation','database.connections.mariadb.prefix','database.connections.mariadb.prefix_indexes',
'database.connections.mariadb.strict','database.connections.mariadb.engine','database.connections.mariadb.options','database.connections.pgsql.driver','database.connections.pgsql.url',
'database.connections.pgsql.host','database.connections.pgsql.port','database.connections.pgsql.database','database.connections.pgsql.username','database.connections.pgsql.password',
'database.connections.pgsql.charset','database.connections.pgsql.prefix','database.connections.pgsql.prefix_indexes','database.connections.pgsql.search_path','database.connections.pgsql.sslmode',
'database.connections.sqlsrv.driver','database.connections.sqlsrv.url','database.connections.sqlsrv.host','database.connections.sqlsrv.port','database.connections.sqlsrv.database',
'database.connections.sqlsrv.username','database.connections.sqlsrv.password','database.connections.sqlsrv.charset','database.connections.sqlsrv.prefix','database.connections.sqlsrv.prefix_indexes',
'database.migrations.table','database.migrations.update_date_on_publish','database.redis.client','database.redis.options.cluster','database.redis.options.prefix',
'database.redis.options.persistent','database.redis.default.url','database.redis.default.host','database.redis.default.username','database.redis.default.password',
'database.redis.default.port','database.redis.default.database','database.redis.default.max_retries','database.redis.default.backoff_algorithm','database.redis.default.backoff_base',
'database.redis.default.backoff_cap','database.redis.cache.url','database.redis.cache.host','database.redis.cache.username','database.redis.cache.password',
'database.redis.cache.port','database.redis.cache.database','database.redis.cache.max_retries','database.redis.cache.backoff_algorithm','database.redis.cache.backoff_base',
'database.redis.cache.backoff_cap','filesystems.default','filesystems.disks.local.driver','filesystems.disks.local.root','filesystems.disks.local.serve',
'filesystems.disks.local.throw','filesystems.disks.local.report','filesystems.disks.public.driver','filesystems.disks.public.root','filesystems.disks.public.url',
'filesystems.disks.public.visibility','filesystems.disks.public.throw','filesystems.disks.public.report','filesystems.disks.s3.driver','filesystems.disks.s3.key',
'filesystems.disks.s3.secret','filesystems.disks.s3.region','filesystems.disks.s3.bucket','filesystems.disks.s3.url','filesystems.disks.s3.endpoint',
'filesystems.disks.s3.use_path_style_endpoint','filesystems.disks.s3.throw','filesystems.disks.s3.report','filesystems.links.C:\\xampp\\htdocs\\MediManage\\public\\storage','fortify.guard',
'fortify.middleware','fortify.auth_middleware','fortify.passwords','fortify.username','fortify.email',
'fortify.views','fortify.home','fortify.prefix','fortify.domain','fortify.lowercase_usernames',
'fortify.limiters.login','fortify.limiters.two-factor','fortify.paths.login','fortify.paths.logout','fortify.paths.password.request',
'fortify.paths.password.reset','fortify.paths.password.email','fortify.paths.password.update','fortify.paths.password.confirm','fortify.paths.password.confirmation',
'fortify.paths.register','fortify.paths.verification.notice','fortify.paths.verification.verify','fortify.paths.verification.send','fortify.paths.user-profile-information.update',
'fortify.paths.user-password.update','fortify.paths.two-factor.login','fortify.paths.two-factor.enable','fortify.paths.two-factor.confirm','fortify.paths.two-factor.disable',
'fortify.paths.two-factor.qr-code','fortify.paths.two-factor.secret-key','fortify.paths.two-factor.recovery-codes','fortify.redirects.login','fortify.redirects.logout',
'fortify.redirects.password-confirmation','fortify.redirects.register','fortify.redirects.email-verification','fortify.redirects.password-reset','fortify.features',
'inertia.ssr.enabled','inertia.ssr.url','inertia.ensure_pages_exist','inertia.page_paths','inertia.page_extensions',
'inertia.testing.ensure_pages_exist','inertia.testing.page_paths','inertia.testing.page_extensions','inertia.history.encrypt','logging.default',
'logging.deprecations.channel','logging.deprecations.trace','logging.channels.stack.driver','logging.channels.stack.channels','logging.channels.stack.ignore_exceptions',
'logging.channels.single.driver','logging.channels.single.path','logging.channels.single.level','logging.channels.single.replace_placeholders','logging.channels.daily.driver',
'logging.channels.daily.path','logging.channels.daily.level','logging.channels.daily.days','logging.channels.daily.replace_placeholders','logging.channels.slack.driver',
'logging.channels.slack.url','logging.channels.slack.username','logging.channels.slack.emoji','logging.channels.slack.level','logging.channels.slack.replace_placeholders',
'logging.channels.papertrail.driver','logging.channels.papertrail.level','logging.channels.papertrail.handler','logging.channels.papertrail.handler_with.host','logging.channels.papertrail.handler_with.port',
'logging.channels.papertrail.handler_with.connectionString','logging.channels.papertrail.processors','logging.channels.stderr.driver','logging.channels.stderr.level','logging.channels.stderr.handler',
'logging.channels.stderr.formatter','logging.channels.stderr.with.stream','logging.channels.stderr.processors','logging.channels.syslog.driver','logging.channels.syslog.level',
'logging.channels.syslog.facility','logging.channels.syslog.replace_placeholders','logging.channels.errorlog.driver','logging.channels.errorlog.level','logging.channels.errorlog.replace_placeholders',
'logging.channels.null.driver','logging.channels.null.handler','logging.channels.emergency.path','mail.default','mail.mailers.smtp.transport',
'mail.mailers.smtp.scheme','mail.mailers.smtp.url','mail.mailers.smtp.host','mail.mailers.smtp.port','mail.mailers.smtp.username',
'mail.mailers.smtp.password','mail.mailers.smtp.timeout','mail.mailers.smtp.local_domain','mail.mailers.ses.transport','mail.mailers.postmark.transport',
'mail.mailers.resend.transport','mail.mailers.sendmail.transport','mail.mailers.sendmail.path','mail.mailers.log.transport','mail.mailers.log.channel',
'mail.mailers.array.transport','mail.mailers.failover.transport','mail.mailers.failover.mailers','mail.mailers.roundrobin.transport','mail.mailers.roundrobin.mailers',
'mail.from.address','mail.from.name','mail.markdown.theme','mail.markdown.paths','queue.default',
'queue.connections.sync.driver','queue.connections.database.driver','queue.connections.database.connection','queue.connections.database.table','queue.connections.database.queue',
'queue.connections.database.retry_after','queue.connections.database.after_commit','queue.connections.beanstalkd.driver','queue.connections.beanstalkd.host','queue.connections.beanstalkd.queue',
'queue.connections.beanstalkd.retry_after','queue.connections.beanstalkd.block_for','queue.connections.beanstalkd.after_commit','queue.connections.sqs.driver','queue.connections.sqs.key',
'queue.connections.sqs.secret','queue.connections.sqs.prefix','queue.connections.sqs.queue','queue.connections.sqs.suffix','queue.connections.sqs.region',
'queue.connections.sqs.after_commit','queue.connections.redis.driver','queue.connections.redis.connection','queue.connections.redis.queue','queue.connections.redis.retry_after',
'queue.connections.redis.block_for','queue.connections.redis.after_commit','queue.batching.database','queue.batching.table','queue.failed.driver',
'queue.failed.database','queue.failed.table','services.postmark.token','services.resend.key','services.ses.key',
'services.ses.secret','services.ses.region','services.slack.notifications.bot_user_oauth_token','services.slack.notifications.channel','session.driver',
'session.lifetime','session.expire_on_close','session.encrypt','session.files','session.connection',
'session.table','session.store','session.lottery','session.cookie','session.path',
'session.domain','session.secure','session.http_only','session.same_site','session.partitioned',
'ide-helper.filename','ide-helper.models_filename','ide-helper.meta_filename','ide-helper.include_fluent','ide-helper.include_factory_builders',
'ide-helper.write_model_magic_where','ide-helper.write_model_external_builder_methods','ide-helper.write_model_relation_count_properties','ide-helper.write_model_relation_exists_properties','ide-helper.write_eloquent_model_mixins',
'ide-helper.include_helpers','ide-helper.helper_files','ide-helper.model_locations','ide-helper.ignored_models','ide-helper.model_hooks',
'ide-helper.extra.Eloquent','ide-helper.extra.Session','ide-helper.magic','ide-helper.interfaces','ide-helper.model_camel_case_properties',
'ide-helper.type_overrides.integer','ide-helper.type_overrides.boolean','ide-helper.include_class_docblocks','ide-helper.force_fqn','ide-helper.use_generics_annotations',
'ide-helper.macro_default_return_types.Illuminate\\Http\\Client\\Factory','ide-helper.additional_relation_types','ide-helper.additional_relation_return_types','ide-helper.enforce_nullable_relationships','ide-helper.post_migrate',
'tinker.commands','tinker.alias','tinker.dont_alias',);
        registerArgumentsSet('middleware', 
'web','api',);
        registerArgumentsSet('routes', 
'login','login.store','logout','password.confirm','password.confirmation',
'password.confirm.store','two-factor.login','two-factor.login.store','two-factor.enable','two-factor.confirm',
'two-factor.disable','two-factor.qr-code','two-factor.secret-key','two-factor.recovery-codes','two-factor.regenerate-recovery-codes','home','dashboard','profile.edit',
'profile.update','profile.destroy','password.edit','password.update','appearance.edit',
'two-factor.show','register','register.store','password.request','password.email',
'password.reset','password.store','verification.notice','verification.verify','verification.send',
'storage.local',);
        registerArgumentsSet('views', 
'app','laravel-exceptions-renderer::components.badge','laravel-exceptions-renderer::components.empty-state','laravel-exceptions-renderer::components.file-with-line','laravel-exceptions-renderer::components.formatted-source',
'laravel-exceptions-renderer::components.frame','laravel-exceptions-renderer::components.frame-code','laravel-exceptions-renderer::components.header','laravel-exceptions-renderer::components.http-method','laravel-exceptions-renderer::components.icons.alert',
'laravel-exceptions-renderer::components.icons.check','laravel-exceptions-renderer::components.icons.chevron-left','laravel-exceptions-renderer::components.icons.chevron-right','laravel-exceptions-renderer::components.icons.chevrons-down-up','laravel-exceptions-renderer::components.icons.chevrons-left',
'laravel-exceptions-renderer::components.icons.chevrons-right','laravel-exceptions-renderer::components.icons.chevrons-up-down','laravel-exceptions-renderer::components.icons.copy','laravel-exceptions-renderer::components.icons.database','laravel-exceptions-renderer::components.icons.folder',
'laravel-exceptions-renderer::components.icons.folder-open','laravel-exceptions-renderer::components.icons.globe','laravel-exceptions-renderer::components.icons.info','laravel-exceptions-renderer::components.icons.laravel-ascii','laravel-exceptions-renderer::components.laravel-ascii-spotlight',
'laravel-exceptions-renderer::components.layout','laravel-exceptions-renderer::components.overview','laravel-exceptions-renderer::components.query','laravel-exceptions-renderer::components.request-body','laravel-exceptions-renderer::components.request-header',
'laravel-exceptions-renderer::components.request-url','laravel-exceptions-renderer::components.routing','laravel-exceptions-renderer::components.routing-parameter','laravel-exceptions-renderer::components.section-container','laravel-exceptions-renderer::components.separator',
'laravel-exceptions-renderer::components.syntax-highlight','laravel-exceptions-renderer::components.topbar','laravel-exceptions-renderer::components.trace','laravel-exceptions-renderer::components.vendor-frame','laravel-exceptions-renderer::components.vendor-frames',
'laravel-exceptions-renderer::markdown','laravel-exceptions-renderer::show','laravel-exceptions::401','laravel-exceptions::402','laravel-exceptions::403',
'laravel-exceptions::404','laravel-exceptions::419','laravel-exceptions::429','laravel-exceptions::500','laravel-exceptions::503',
'laravel-exceptions::layout','laravel-exceptions::minimal','notifications::email','pagination::bootstrap-4','pagination::bootstrap-5',
'pagination::default','pagination::semantic-ui','pagination::simple-bootstrap-4','pagination::simple-bootstrap-5','pagination::simple-default',
'pagination::simple-tailwind','pagination::tailwind',);
        registerArgumentsSet('translations', 
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.auth.failed','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.auth.password','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.auth.throttle','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.pagination.previous','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.pagination.next',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.passwords.reset','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.passwords.sent','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.passwords.throttled','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.passwords.token','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.passwords.user',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.accepted','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.accepted_if','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.active_url','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.after','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.after_or_equal',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.alpha','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.alpha_dash','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.alpha_num','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.any_of','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.array',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.ascii','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.before','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.before_or_equal','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.between.array','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.between.file',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.between.numeric','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.between.string','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.boolean','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.can','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.confirmed',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.contains','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.current_password','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.date','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.date_equals','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.date_format',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.decimal','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.declined','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.declined_if','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.different','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.digits',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.digits_between','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.dimensions','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.distinct','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.doesnt_contain','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.doesnt_end_with',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.doesnt_start_with','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.email','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.ends_with','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.enum','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.exists',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.extensions','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.file','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.filled','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.gt.array','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.gt.file',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.gt.numeric','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.gt.string','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.gte.array','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.gte.file','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.gte.numeric',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.gte.string','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.hex_color','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.image','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.in','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.in_array',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.in_array_keys','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.integer','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.ip','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.ipv4','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.ipv6',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.json','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.list','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.lowercase','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.lt.array','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.lt.file',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.lt.numeric','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.lt.string','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.lte.array','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.lte.file','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.lte.numeric',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.lte.string','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.mac_address','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.max.array','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.max.file','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.max.numeric',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.max.string','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.max_digits','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.mimes','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.mimetypes','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.min.array',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.min.file','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.min.numeric','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.min.string','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.min_digits','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.missing',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.missing_if','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.missing_unless','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.missing_with','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.missing_with_all','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.multiple_of',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.not_in','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.not_regex','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.numeric','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.password.letters','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.password.mixed',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.password.numbers','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.password.symbols','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.password.uncompromised','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.present','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.present_if',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.present_unless','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.present_with','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.present_with_all','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.prohibited','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.prohibited_if',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.prohibited_if_accepted','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.prohibited_if_declined','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.prohibited_unless','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.prohibits','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.regex',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.required','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.required_array_keys','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.required_if','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.required_if_accepted','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.required_if_declined',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.required_unless','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.required_with','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.required_with_all','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.required_without','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.required_without_all',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.same','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.size.array','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.size.file','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.size.numeric','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.size.string',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.starts_with','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.string','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.timezone','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.unique','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.uploaded',
'C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.uppercase','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.url','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.ulid','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.uuid','C:.xampp.htdocs.MediManage.vendor.laravel.framework.src.Illuminate.Translation.lang.en.validation.custom.attribute-name.rule-name',);
        registerArgumentsSet('env', 
'APP_NAME','APP_ENV','APP_KEY','APP_DEBUG','APP_URL',
'APP_LOCALE','APP_FALLBACK_LOCALE','APP_FAKER_LOCALE','APP_MAINTENANCE_DRIVER','PHP_CLI_SERVER_WORKERS',
'BCRYPT_ROUNDS','LOG_CHANNEL','LOG_STACK','LOG_DEPRECATIONS_CHANNEL','LOG_LEVEL',
'DB_CONNECTION','SESSION_DRIVER','SESSION_LIFETIME','SESSION_ENCRYPT','SESSION_PATH',
'SESSION_DOMAIN','BROADCAST_CONNECTION','FILESYSTEM_DISK','QUEUE_CONNECTION','CACHE_STORE',
'MEMCACHED_HOST','REDIS_CLIENT','REDIS_HOST','REDIS_PASSWORD','REDIS_PORT',
'MAIL_MAILER','MAIL_SCHEME','MAIL_HOST','MAIL_PORT','MAIL_USERNAME',
'MAIL_PASSWORD','MAIL_FROM_ADDRESS','MAIL_FROM_NAME','AWS_ACCESS_KEY_ID','AWS_SECRET_ACCESS_KEY',
'AWS_DEFAULT_REGION','AWS_BUCKET','AWS_USE_PATH_STYLE_ENDPOINT','VITE_APP_NAME',);
        
                expectedArguments(\Illuminate\Support\Facades\Gate::has(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::allows(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::denies(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::check(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::any(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::none(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::authorize(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::inspect(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Support\Facades\Route::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Route::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Route::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::cant(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Contracts\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Config\Repository::getMany(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::set(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::string(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::integer(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::boolean(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::float(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::array(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::prepend(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::push(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::getMany(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::set(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::string(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::integer(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::boolean(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::float(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::array(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::prepend(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::push(), 0, argumentsSet('configs'));
                expectedArguments(\Illuminate\Support\Facades\Route::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Support\Facades\Route::withoutMiddleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Routing\Router::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Routing\Router::withoutMiddleware(), 0, argumentsSet('middleware'));
                expectedArguments(\route(), 0, argumentsSet('routes'));
    expectedArguments(\to_route(), 0, argumentsSet('routes'));
    expectedArguments(\signedRoute(), 0, argumentsSet('routes'));
                expectedArguments(\Illuminate\Support\Facades\Redirect::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\Redirect::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\Redirect::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::temporarySignedRoute(), 0, argumentsSet('routes'));
                expectedArguments(\view(), 0, argumentsSet('views'));
                expectedArguments(\Illuminate\Support\Facades\View::make(), 0, argumentsSet('views'));
    expectedArguments(\Illuminate\View\Factory::make(), 0, argumentsSet('views'));
                expectedArguments(\__(), 0, argumentsSet('translations'));
    expectedArguments(\trans(), 0, argumentsSet('translations'));
                expectedArguments(\Illuminate\Contracts\Translation\Translator::get(), 0, argumentsSet('translations'));
                expectedArguments(\env(), 0, argumentsSet('env'));
                expectedArguments(\Illuminate\Support\Env::get(), 0, argumentsSet('env'));
            
}
